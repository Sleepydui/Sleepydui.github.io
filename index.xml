<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Xinyue-page</title><link>https://Sleepydui.github.io/</link><description>Recent content in Home on Xinyue-page</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Apr 2023 15:18:43 +0800</lastBuildDate><atom:link href="https://Sleepydui.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>“【工作流】知识输入与输出流兼论终端提交指令"</title><link>https://Sleepydui.github.io/cn/2023/04/22/first-post-cn/</link><pubDate>Sat, 22 Apr 2023 15:18:43 +0800</pubDate><guid>https://Sleepydui.github.io/cn/2023/04/22/first-post-cn/</guid><description>知识输入与输出 我的目标是建立一个正向可循环的、高效的知识输入输出体系。
具体来说： 首先建立一个从外界输入的知识库，这个数据库应该易于存储、访问和查找。 其次优化知识的加工处理流程，利用零碎时间去消化和理解尽可能多的知识。 最后进行输出，以得到对知识更深的理解，如果这些输出能帮助到别人，则是这个体系的bonus。 目前，这个体系暂时是长下图这样，我会在这篇博文记录它的迭代和优化。
知识整理和博客更新流 终端指令备忘录 鉴于我还是个建站的初学者，对hugo等建站工具的大部分认识都来自于hongtao ，在这里记下一些常用指令和自己探索中的notes以便查阅。
MD模版与预览 MD文档模版与HTML对照：
2021-01-07-intro.md https://sleepydui.github.io/cn/2021/01/07/first-post-cn/#%E4%BB%A3%E7%A0%81
另一个对照，也来自hongtao：
https://raw.githubusercontent.com/hongtaoh/hongtaoh.github.io/sources/content/cn/blog/2021-03-02-personal-website.md https://hongtaoh.com/cn/2021/03/02/personal-website-tutorial/
终端指令： ⚠️以下操作都需要先cd到文件夹（我的文件夹叫quickstart）
⚠️以下指令都学习自hongtao的建站教程 1.更新网站:
git add . git commit -m “0422update&amp;#34; git push origin master 2.新添加内容:
hugo new cn/posts/2023-04-22-gitcommit.md 3.在导航栏新加一个分栏:
mkdir content/cn/hobby # hobby 可以换成别的名字 cp content/cn/about/_index.md content/cn/hobby # hobby 可以换成别的名字 open content/cn/hobby/_index.md -a TextEdit 更改这个 _index.md 的 Title 和内容即可。</description></item><item><title>【Vue学习】Vuestructure</title><link>https://Sleepydui.github.io/cn/2023/03/01/vue%E5%AD%A6%E4%B9%A0vuestructure/</link><pubDate>Wed, 01 Mar 2023 20:02:39 +0800</pubDate><guid>https://Sleepydui.github.io/cn/2023/03/01/vue%E5%AD%A6%E4%B9%A0vuestructure/</guid><description>Vue实现原理
main.js 是入口文件我们的项目默认访问index.html，这个文件里面和App.vue组件里面的容器完美的重合了，也就是把组件挂载到了index页面，然后我们只需要去建设其他组件就好了，在App组件中我们也可以引入，注册，应用其他组件，可以通过路由将其他组件渲染在App组件，这样我们就只需要去关注每个组件的功能完善。 就是说vue的默认页面是index.html，index中的挂载了App.vue这个大组件，然后所有的其他子组件（hello.vue等）都归属在App.vue这个主组件下。 主要文件详解
App.vue——[根组件] 一个vue页面通常由三部分组成:模板(template)、js(script)、样式(style) 【template】 其中模板只能包含一个父节点，也就是说顶层的div只能有一个（例如上面代码，父节点为#app的div，其没有兄弟节点） 是子路由视图，后面的路由页面都显示在此处 打一个比喻吧,类似于一个插槽，跳转某个路由时，该路由下的页面就插在这个插槽中渲染显示 【script】 vue通常用es6来写，用export default导出，其下面可以包含数据data，生命周期(mounted等)，方法(methods)等，具体语法请看vue.js文档。 【style】 样式通过style标签包裹，默认是影响全局的，如需定义作用域只在该组件下起作用，需在标签上加scoped. main.js——[入口文件] main.js主要是引入vue框架，根组件及路由设置，并且定义vue实例，下面的 components:{App}就是引入的根组件App.vue /*引入vue框架*/ import Vue from &amp;#39;vue&amp;#39; /*引入根组件*/ import App from &amp;#39;./App&amp;#39; /*引入路由设置*/ import router from &amp;#39;./router&amp;#39; /*定义实例*/ new Vue({ el: &amp;#39;#app&amp;#39;, router, template: &amp;#39;&amp;lt;App/&amp;gt;&amp;#39;, components: { App } }) 主要文件详解 router——[路由配置] vue-router是Vue.</description></item><item><title>[Debug]关于GitHub中下载的vue工程无法打开的问题</title><link>https://Sleepydui.github.io/cn/2023/02/14/debug%E5%85%B3%E4%BA%8Egithub%E4%B8%AD%E4%B8%8B%E8%BD%BD%E7%9A%84vue%E5%B7%A5%E7%A8%8B%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 14 Feb 2023 17:59:02 +0800</pubDate><guid>https://Sleepydui.github.io/cn/2023/02/14/debug%E5%85%B3%E4%BA%8Egithub%E4%B8%AD%E4%B8%8B%E8%BD%BD%E7%9A%84vue%E5%B7%A5%E7%A8%8B%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>command not found问题
从GitHub中下载的vue工程用npm run serve无法打开 npm run serve后报错vue-cli-service:command not found command not found方法
排查全局环境问题——我自己的工程文件是可以用npm run serve打开的 排查文件夹node_modules问题 最终解决方法 rm -rf node_modules #删除GitHub中下载下来的node_modules文件夹 npm cache clean &amp;ndash;force #清除缓冲 npm install #重新安装 感谢chaofan对本文的贡献
0228更新Permission denied问题
从GitHub中下载的vue工程用npm run serve无法打开 报错/node_modules/.bin/vue-cli-service: Permission denied Permission denied方法
原因：缺少执行权限：尝试执行的文件可能没有足够的权限来在终端中运行。 最终解决方法 chmod -R 777 ./ chmod 是 change mode 的缩写，用于更改文件或目录的权限； -R 是递归标志，表示将权限更改应用于目录及其子目录中的所有文件和目录； 777 是权限模式，表示赋予所有用户（包括所有者、所有者所在的组和其他用户）读、写、执行的权限； .</description></item><item><title>Markdown 试水</title><link>https://Sleepydui.github.io/cn/2021/01/07/first-post-cn/</link><pubDate>Thu, 07 Jan 2021 13:42:27 -0500</pubDate><guid>https://Sleepydui.github.io/cn/2021/01/07/first-post-cn/</guid><description>如果好奇以下的内容是如何实现的，请参考本页源代码 。
第一级标题 第二级标题 第三级标题 第四级标题 第五级标题 第六级标题 列表 Water Water Water Water Water Water Water Water Water Water Water Water 表格 Water Water Water Water Water Water Water Water1 Water Water Water Water 引语 知之为知之，不知为不知，是知也2。 — 孔子
数学公式 最简单的如，$1 + 1 = 3$</description></item><item><title>Markdown Testing</title><link>https://Sleepydui.github.io/en/2021/01/07/second-post/</link><pubDate>Thu, 07 Jan 2021 13:37:57 -0500</pubDate><guid>https://Sleepydui.github.io/en/2021/01/07/second-post/</guid><description>See the source code of this page if you are interested.
H1 H2 H3 H4 H5 H6 List Water Water Water Water Water Water Water Water Water Water Water Water Table Water Water Water Water Water Water Water Water1 Water Water Water Water Quotes What I cannot create, I do not understand2.</description></item></channel></rss>